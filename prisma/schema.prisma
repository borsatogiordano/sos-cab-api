// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  USER
  ADMIN
}

enum PAYMENT_METHOD {
  CASH
  CARD
  PIX
}

enum EXPENSE_TYPE {
  FUEL
  MAINTENANCE
  INSURANCE
  TAXES
  TOLLS
  PARKING
  OTHER
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  role      USER_ROLE @default(USER)

  profile  Profile?
  rides    Ride[]
  expenses Expense[]

  @@map("users")
}

model Profile {
  userId    String @id @unique
  firstName String
  lastName  String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model Ride {
  id            String         @id @default(cuid())
  userId        String
  startAddress  String
  endAddress    String
  distance      Decimal        @db.Decimal(8, 2)
  price         Decimal        @db.Decimal(10, 2)
  paymentMethod PAYMENT_METHOD
  observations  String?
  rideDate      DateTime       @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("rides")
}

model Expense {
  id     String       @id @default(cuid())
  userId String
  amount Decimal      @db.Decimal(10, 2)
  type   EXPENSE_TYPE
  date   DateTime     @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("expenses")
}
